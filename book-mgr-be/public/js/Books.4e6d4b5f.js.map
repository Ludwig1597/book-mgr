{"version":3,"sources":["webpack:///./src/views/Books/index.vue","webpack:///./src/helpers/book-classify/index.js","webpack:///./src/views/Books/AddOne/index.vue","webpack:///./src/views/Books/AddOne/index.js","webpack:///./src/views/Books/AddOne/index.vue?1477","webpack:///./src/views/Books/index.jsx","webpack:///./src/views/Books/index.vue?be8f","webpack:///./src/views/Books/Update/index.vue","webpack:///./src/views/Books/Update/index.js","webpack:///./src/views/Books/Update/index.vue?c05e","webpack:///./src/views/Books/index.vue?0e18"],"names":["class","title","simple","placeholder","enter-button","value","keyword","onSearch","isSearch","href","backAll","show","onUploadChange","action","headers","type","columns","data-source","list","pagination","bordered","scroll","publishDate","formatTimestamp","data","record","classify","getClassifyTitleById","count","updateCount","toDetail","update","remove","style","current","curPage","total","page-size","setPage","classifyList","bookClassifyList","getList","showUpdateModal","book","curEditBook","updateCurBook","id","one","store","state","bookClassify","find","item","_id","visible","props","submit","close","label-col","label","addForm","name","price","min","max","author","key","defaultFormData","defineComponent","Boolean","setup","context","reactive","clone","length","form","valueOf","add","res","result","success","d","Object","assign","message","msg","emit","render","components","AddOne","Update","router","useRouter","dataIndex","slots","customRender","push","ref","page","size","l","t","onMounted","text","word","Modal","confirm","content","onOk","el","document","querySelector","num","Math","abs","newData","file","response","addMany","addCount","getHeaders","__scopeId","editForm","watch","moment","Number"],"mappings":"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","file":"js/Books.4e6d4b5f.js","sourcesContent":["<template>\r\n    <div>\r\n        <!-- ant-design的一个组件 -->\r\n        <a-card\r\n            :title=\"simple?'最近添加的货物':''\"\r\n        >\r\n            <div v-if=\"!simple\">\r\n                <h2>图书列表</h2>\r\n                <!-- divide line -->\r\n                <a-divider />\r\n                <!-- ant-design的搜索框组件 -->\r\n                <space-between>\r\n                <div class=\"search\">\r\n                    <a-input-search \r\n                        placeholder=\"根据书名搜索\" \r\n                        enter-button \r\n                        v-model:value=\"keyword\"\r\n                        @search=\"onSearch\"\r\n                    />\r\n                    <a v-if=\"isSearch\" href=\"javascript:;\" @click=\"backAll\">返回</a>\r\n                </div>\r\n\r\n                <div>\r\n                    <a-button \r\n                        v-only-admin \r\n                        @click=\"show=true\"\r\n                    >添加一条</a-button>\r\n                    \r\n                    &nbsp;\r\n\r\n                    <a-upload\r\n                        @change=\"onUploadChange\"    \r\n                        action=\"http://localhost:3000/upload/file\"\r\n                        :headers=\"headers\"\r\n                    >\r\n                        <a-button type=\"primary\">上传 Excel 添加</a-button>\r\n                    </a-upload>\r\n                </div>\r\n\r\n                \r\n                </space-between>\r\n\r\n                <a-divider />\r\n            </div>\r\n            \r\n            <!-- columns是每个表格的配置项 -->\r\n            <a-table \r\n                :columns=\"columns\" \r\n                :data-source=\"list\"\r\n                :pagination=\"false\"\r\n                bordered\r\n                :scroll=\"{x:'max-content'}\"\r\n            >\r\n                <template #publishDate=\"data\">\r\n                    {{formatTimestamp(data.record.publishDate)}}\r\n                </template>\r\n\r\n                <template #classify=\"{record}\">\r\n                    {{getClassifyTitleById(record.classify)}}\r\n                </template>\r\n\r\n                <template #count=\"data\">\r\n                    <a href=\"JavaScript:;\" v-if=\"!simple\" @click=\"updateCount('IN_COUNT',data.record)\">入库</a>\r\n                    {{data.record.count}}\r\n                    <a href=\"JavaScript:;\" v-if=\"!simple\" @click=\"updateCount('OUT_COUNT',data.record)\">出库</a>\r\n                </template>\r\n\r\n                <template #actions=\"record\" v-if=\"!simple\">\r\n                    <a href=\"javascript:;\" @click=\"toDetail(record)\">详情</a>\r\n                    &nbsp;\r\n                    <a v-only-admin href=\"javascript:;\" @click=\"update(record)\">编辑</a>\r\n                    &nbsp;\r\n                    <a v-only-admin href=\"javascript:;\" @click=\"remove(record)\">删除</a>\r\n                </template>\r\n            </a-table>\r\n            <!-- 在这里放置一个分页组件 -->\r\n            <flex-end v-if=\"!simple\" style=\"margin-top:24px\">\r\n                <a-pagination \r\n                    v-model:current=\"curPage\" \r\n                    :total=\"total\"\r\n                    :page-size=\"10\"\r\n                    @change=\"setPage\"\r\n                />\r\n            </flex-end>\r\n            \r\n        </a-card>\r\n        <add-one \r\n            v-model:show=\"show\"\r\n            :classifyList=\"bookClassifyList\"\r\n            @getList=\"getList\"\r\n        />\r\n        <update \r\n            v-model:show=\"showUpdateModal\"\r\n            :book=\"curEditBook\"\r\n            @update=\"updateCurBook\"\r\n        />\r\n    </div>\r\n</template>\r\n\r\n<script src=\"./index.jsx\"></script>\r\n\r\n<style lang=\"scss\" scoped>\r\n// 加上scoped属性是为了解决全局相同类命名污染的问题\r\n    @import './index.scss';\r\n</style>","//我们要从store里面去取对应的数据\r\nimport store from '@/store';\r\n\r\nexport const getClassifyTitleById = (id) => {\r\n    const one = store.state.bookClassify.find((item) => (item._id === id));\r\n\r\n    return one && one.title || '未知分类'\r\n        /* if (one) {\r\n            return one.title;\r\n        }\r\n\r\n        return '未知分类' */\r\n}","<template>\r\n    <div>\r\n        <a-modal \r\n            title=\"添加书籍\"\r\n            :visible=\"props.show\"\r\n            @ok=\"submit\"\r\n            @cancel=\"close\"\r\n        >\r\n            <a-form :label-col=\"{span:6}\" >\r\n                <a-form-item label=\"书名\">\r\n                    <a-input  v-model:value=\"addForm.name\" />\r\n                </a-form-item>\r\n                <a-form-item label=\"价格\">\r\n                    <a-input-number v-model:value=\"addForm.price\" :min=\"0\" :max=\"99999999999\" />\r\n                </a-form-item>\r\n                <a-form-item label=\"作者\">\r\n                    <a-input v-model:value=\"addForm.author\" />\r\n                </a-form-item>\r\n                <a-form-item label=\"出版日期\">\r\n                    <a-date-picker v-model:value=\"addForm.publishDate\" />\r\n                </a-form-item>\r\n                <!-- classifyList -->\r\n                <a-form-item label=\"分类\">\r\n                   <a-select\r\n                        v-model:value=\"addForm.classify\"\r\n                        style=\"width: 120px\"\r\n                    >\r\n                        <a-select-option \r\n                            v-for=\"item in store.bookClassify\"\r\n                            :key=\"item._id\"\r\n                            :value=\"item._id\"\r\n                        >{{item.title}}</a-select-option>\r\n                    </a-select>\r\n                </a-form-item>\r\n                \r\n                <a-form-item label=\"库存\">\r\n                    <a-input v-model:value=\"addForm.count\" />\r\n                </a-form-item>\r\n            </a-form>\r\n        </a-modal>\r\n    </div>\r\n</template>\r\n\r\n<script src=\"./index.js\"></script>","import { defineComponent, reactive, withCtx } from 'vue';\r\nimport { book } from '@/service'; //然后就可以调用book下的add方法\r\nimport { message } from 'ant-design-vue';\r\nimport store from '@/store';\r\nimport { result, clone } from '@/helpers/utils';\r\n\r\nconst defaultFormData = {\r\n    name: '',\r\n    price: '',\r\n    author: '',\r\n    publishDate: 0,\r\n    classify: '',\r\n    count: '',\r\n}\r\nexport default defineComponent({\r\n    props: {\r\n        show: Boolean,\r\n        //classifyList: Array, //来自index.vue的addone标签属性\r\n        //在store里写好了\r\n    },\r\n    setup(props, context) {\r\n        //console.log(props);\r\n        const addForm = reactive(clone(defaultFormData));\r\n\r\n        if (store.state.bookClassify.length) {\r\n            addForm.classify = store.state.bookClassify[0]._id;\r\n        }\r\n\r\n        //这样我们就去调用了一下add接口，同时把我们的数据传递了过去\r\n        const submit = async() => {\r\n            //去把表单复制一份（深拷贝）,将data写成时间戳\r\n            //const form = JSON.parse(JSON.stringify(addForm));\r\n            const form = clone(addForm);\r\n            form.publishDate = addForm.publishDate.valueOf();\r\n            //通过book.add()发请求把数据发过去\r\n            const res = await book.add(form);\r\n\r\n            result(res)\r\n                .success((d, { data }) => {\r\n                    Object.assign(addForm, defaultFormData);\r\n                    message.success(data.msg); //这个msg是服务端响应的\r\n                    context.emit('getList');\r\n                }); //这样就达到了一个清空表单的效果\r\n\r\n        };\r\n\r\n        /* const close = () => {\r\n            context.emit('setShow', false);\r\n        }; */\r\n        const close = () => {\r\n            context.emit('update:show', false);\r\n        };\r\n\r\n        return {\r\n            addForm,\r\n            submit,\r\n            props,\r\n            close,\r\n            store: store.state,\r\n        }\r\n    },\r\n});","import { render } from \"./index.vue?vue&type=template&id=1802caab\"\nimport script from \"./index.js?vue&type=script&lang=js\"\nexport * from \"./index.js?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { defineComponent, ref, onMounted, } from 'vue'; //ref响应式变量标记显示隐藏\r\nimport { book,bookClassify } from '@/service';//把分类相关接口也拿过来\r\nimport {useRouter} from 'vue-router';\r\nimport { message, Modal,Input } from 'ant-design-vue';\r\nimport { result, formatTimestamp } from '@/helpers/utils';\r\nimport {getClassifyTitleById} from '@/helpers/book-classify';\r\nimport AddOne from './AddOne/index.vue';\r\nimport Update from './Update/index.vue';\r\nimport { getHeaders } from '@/helpers/request';\r\nimport { list } from '../../service/book';\r\nimport { itemProps } from 'ant-design-vue/lib/vc-menu';\r\n\r\nexport default defineComponent({\r\n    //通过components这个配置项去注册\r\n    components: {\r\n        AddOne,\r\n        Update,\r\n    },\r\n\r\n    props:{\r\n        simple:Boolean,\r\n    },\r\n\r\n    setup(props) {\r\n        const router=useRouter();\r\n        // columns是一个数组，它每一项就代表每一列的配置项\r\n        const columns = [{\r\n                title: '书名',\r\n                dataIndex: 'name',\r\n            }, {\r\n                title: '作者',\r\n                dataIndex: 'author',\r\n            },\r\n            {\r\n                title: '价格',\r\n                dataIndex: 'price',\r\n            },\r\n            {\r\n                title: '库存',\r\n                slots: {\r\n                    customRender: 'count',\r\n                }\r\n            },\r\n            {\r\n                title: '出版日期',\r\n                dataIndex: 'publishDate',\r\n                slots: {\r\n                    customRender: 'publishDate',\r\n                }\r\n            },\r\n            {\r\n                title: '分类',\r\n                slots: {\r\n                    customRender: 'classify',\r\n                }\r\n            },\r\n            // {\r\n            //     title: '操作',\r\n            //     slots: {\r\n            //         customRender: 'actions',\r\n            //     }\r\n            // },//根据simple去判断是否存在\r\n\r\n        ];\r\n\r\n        if(!props.simple){\r\n            columns.push({\r\n                title: '操作',\r\n                slots: {\r\n                    customRender: 'actions',\r\n                }   \r\n            });\r\n        }\r\n\r\n        const show = ref(false);\r\n        const showUpdateModal=ref(false);\r\n        const list = ref([]);\r\n        const total = ref(0);\r\n        const curPage = ref(1); //默认当前在第一页\r\n        const keyword = ref(''); //ref是一个响应式的数据\r\n        const isSearch = ref(false);\r\n        const curEditBook=ref({});\r\n        //const bookClassifyList=ref([]);\r\n        //const classifyLoading=ref(true);\r\n\r\n        //获取书籍分类列表\r\n        /* const getBookClassify=async()=>{\r\n            classifyLoading.value=true;\r\n            const res=await bookClassify.list();\r\n            classifyLoading.value=false;//去给按钮加一个loading的属性\r\n\r\n            result(res)\r\n                .success(({data})=>{\r\n                    bookClassifyList.value=data;\r\n                })\r\n        } */\r\n        //获取书籍列表\r\n        const getList = async() => {\r\n                //调用接口\r\n                const res = await book.list({\r\n                    page: curPage.value,\r\n                    size: 10,\r\n                    keyword: keyword.value,\r\n                });\r\n\r\n                result(res)\r\n                    .success(({ data }) => {\r\n                        const { list: l, total: t } = data;\r\n                        list.value = l;\r\n                        total.value = t;\r\n                        //这样表格的数据就被赋值好了\r\n                    });\r\n            }\r\n            //当组件被挂载完会做什么事情\r\n        onMounted(async() => {\r\n            //await getBookClassify();//这个要先调用\r\n            getList();\r\n        });\r\n        //设置页码\r\n        //切页\r\n        const setPage = (page) => {\r\n                curPage.value = page;\r\n\r\n                getList();\r\n            }\r\n            //触发搜索\r\n        const onSearch = () => {\r\n            getList();\r\n            //isSearch.value = true;\r\n            // 字符串非空的时候 --> true\r\n            // 字符串为空的时候 --> false\r\n            //这里是一个隐式转换\r\n            isSearch.value = keyword.value;\r\n        };\r\n        //回到全部列表\r\n        const backAll = () => {\r\n            keyword.value = '';\r\n            isSearch.value = false;\r\n\r\n            getList();\r\n        };\r\n        //删除一本书籍\r\n        const remove = async({ text: record }) => {\r\n                //console.log(record);\r\n                const { _id } = record;\r\n\r\n                const res = await book.remove(_id); //在service下写好的前端接口调用一下\r\n\r\n                result(res) //通过我们写的result函数处理一下res\r\n                    .success(({ msg }) => {\r\n                        message.success(msg); //删除成功弹窗\r\n                        //这个message是ant-design的message要import进来\r\n                        /* const idx = list.value.findIndex((item) => {\r\n                            //去本地的书籍的列表里找，找刚刚删除的id的那本书，找到它的位置，把对应位置的删除掉就好了\r\n                            return item._id === _id;\r\n                            /* if (item._id === _id) {\r\n                                return true;\r\n                            }\r\n                            return false; \r\n                        });//但这种方法不会做页面刷新*/\r\n                        //list.value.splice(idx, 1);  //从idx项开始删，删除1个\r\n                        getList(); //删除成功后拿一下新的列表\r\n                    })\r\n\r\n            } //js里的事件写好了，就要去前端页面绑定事件，\r\n\r\n        const updateCount = (type,record) => {\r\n            let word=\"增加\";\r\n            if(type==='OUT_COUNT'){\r\n                word=\"减少\";\r\n            }\r\n            Modal.confirm({\r\n                //确认弹框\r\n                title: `要${word}多少库存`,\r\n                content: (\r\n                    <div>\r\n                        <Input class=\"__book_input_count\"/>\r\n                    </div>\r\n                ),\r\n                onOk:async()=>{\r\n                    const el=document.querySelector('.__book_input_count');\r\n                    //取到的数据就是el.value\r\n                    let num=el.value;\r\n                    const res=await book.updateCount({\r\n                        id:record._id,\r\n                        //num:el.value,\r\n                        num,\r\n                        type,\r\n                    });\r\n                    //console.log(el.value);\r\n                    result(res)\r\n                        .success((data)=>{\r\n                            let num=el.value;\r\n                            if (type === 'IN_COUNT') {\r\n                                //入库操作\r\n                                num = Math.abs(num);\r\n                            } else {\r\n                                //出库操作\r\n                                num = -Math.abs(num);\r\n                            }\r\n                            const one = list.value.find((item)=>{\r\n                                return item._id===record._id;\r\n                            });\r\n                            if(one){\r\n                                one.count=one.count+num;\r\n                                message.success(`成功${word}${Math.abs(num)}本书`)\r\n                            }\r\n                        })\r\n                    //getList();\r\n                },\r\n                /* createVNode('div', {\r\n                    id: 'abcd',\r\n                    innerHTML: '<a>abcd</a>',\r\n                }), */ //virtual Node 虚拟dom节点\r\n            })\r\n        }\r\n        //显示更新弹框\r\n        const update=({record})=>{\r\n            showUpdateModal.value=true;\r\n            curEditBook.value=record;\r\n        }\r\n        //更新列表的某一行数据\r\n        const updateCurBook=(newData)=>{\r\n            Object.assign(curEditBook.value,newData);\r\n        }\r\n        //进入书籍详情页\r\n        const toDetail=({record})=>{\r\n            //我们怎么进到书籍详情页呢import {useRouter} from 'vue-router';\r\n            router.push(`/books/${record._id}`);\r\n        }\r\n\r\n        const onUploadChange = ({ file }) => {\r\n            //console.log(e);\r\n            if (file.response) {\r\n                result(file.response)\r\n                    .success(async(key) => {\r\n                        const res = await book.addMany(key);\r\n\r\n                        result(res)\r\n                            .success(({ data: { addCount } }) => {\r\n                                message.success(`成功添加${addCount}本书`)\r\n\r\n                                getList();\r\n                            })\r\n                    });\r\n            }\r\n        }\r\n\r\n        return {\r\n            columns,\r\n            show,\r\n            list,\r\n            formatTimestamp,\r\n            curPage,\r\n            total,\r\n            setPage,\r\n            keyword,\r\n            onSearch,\r\n            backAll,\r\n            isSearch,\r\n            remove,\r\n            updateCount,\r\n            showUpdateModal,\r\n            update,\r\n            curEditBook,\r\n            updateCurBook,\r\n            toDetail,\r\n            getList,\r\n            //classifyLoading,\r\n            //bookClassifyList,//addOne要传递出来这个列表去给addone标签加上\r\n            getClassifyTitleById,\r\n            simple:props.simple,\r\n            onUploadChange,\r\n            headers: getHeaders(),\r\n        };\r\n    },\r\n});","import { render } from \"./index.vue?vue&type=template&id=ff686542&scoped=true\"\nimport script from \"./index.jsx?vue&type=script&lang=js\"\nexport * from \"./index.jsx?vue&type=script&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=ff686542&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-ff686542\"\n\nexport default script","<template>\r\n    <div>\r\n        <a-modal \r\n            title=\"添加书籍\"\r\n            :visible=\"props.show\"\r\n            @ok=\"submit\"\r\n            @cancel=\"close\"\r\n        >\r\n            <a-form :label-col=\"{span:6}\" >\r\n                <a-form-item label=\"书名\">\r\n                    <a-input  v-model:value=\"editForm.name\" />\r\n                </a-form-item>\r\n                <a-form-item label=\"价格\">\r\n                    <a-input-number v-model:value=\"editForm.price\" :min=\"0\" :max=\"99999999999\" />\r\n                </a-form-item>\r\n                <a-form-item label=\"作者\">\r\n                    <a-input v-model:value=\"editForm.author\" />\r\n                </a-form-item>\r\n                <a-form-item label=\"出版日期\">\r\n                    <a-date-picker v-model:value=\"editForm.publishDate\" />\r\n                </a-form-item>\r\n                <!-- classifyList -->\r\n                <a-form-item label=\"分类\">\r\n                   <a-select\r\n                        v-model:value=\"editForm.classify\"\r\n                        style=\"width: 120px\"\r\n                    >\r\n                        <a-select-option \r\n                            v-for=\"item in store.bookClassify\"\r\n                            :key=\"item._id\"\r\n                            :value=\"item._id\"\r\n                        >{{item.title}}</a-select-option>\r\n                    </a-select>\r\n                </a-form-item>\r\n            </a-form>\r\n        </a-modal>\r\n    </div>\r\n</template>\r\n\r\n<script src=\"./index.js\"></script>","import { defineComponent, getCurrentInstance, reactive, watch } from 'vue';\r\nimport { book } from '@/service'; //然后就可以调用book下的add方法\r\nimport { message } from 'ant-design-vue';\r\nimport { result, clone } from '@/helpers/utils';\r\nimport moment from 'moment';\r\nimport store from '@/store';\r\n\r\nexport default defineComponent({\r\n    props: {\r\n        show: Boolean,\r\n        book: Object,\r\n    },\r\n    setup(props, context) {\r\n        const editForm = reactive({\r\n            name: '',\r\n            price: '',\r\n            author: '',\r\n            publishDate: 0,\r\n            classify: '',\r\n            count: '',\r\n        })\r\n\r\n        const close = () => {\r\n            context.emit('update:show', false);\r\n        };\r\n\r\n        watch(() => props.book, (current) => {\r\n            Object.assign(editForm, current);\r\n            editForm.publishDate = moment(Number(editForm.publishDate));\r\n        });\r\n        //防止它报错\r\n        const submit = async() => {\r\n            const res = await book.update({\r\n                id: props.book._id,\r\n                //...editForm, //扩展运算符\r\n                name: editForm.name,\r\n                price: editForm.price,\r\n                author: editForm.author,\r\n                publishDate: editForm.publishDate.valueOf(),\r\n                classify: editForm.classify,\r\n                //publishDate: editForm.publishDate.valueOf(), //覆盖上面拓展出来的\r\n            });\r\n            result(res)\r\n                .success(({ data, msg }) => {\r\n                    context.emit('update', data); //第一个是index.vue中@update名字\r\n                    //Object.assign(props.book, data);\r\n                    message.success(msg);\r\n                    close(); //成功后关闭窗口\r\n\r\n                });\r\n        };\r\n        return {\r\n            editForm,\r\n            submit,\r\n            props,\r\n            close,\r\n            store: store.state,\r\n        }\r\n    },\r\n});","import { render } from \"./index.vue?vue&type=template&id=0d5e7446\"\nimport script from \"./index.js?vue&type=script&lang=js\"\nexport * from \"./index.js?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./index.vue?vue&type=style&index=0&id=ff686542&lang=scss&scoped=true\""],"sourceRoot":""}